---
title: ""
author: ""
format:
  html:
    page-layout: full
    css: custom.css
    toc: TRUE
    toc-location: left
    embed-resources: true
  pdf: 
    classoption: landscape
    toc: TRUE
params:
  gemeentecode: 1 
editor: visual
format-links: false
crossref:
  fig-title: Grafiek
  fig-prefix: Grafiek
---

{r, echo=F, message=F, warning=F}
# Het script maakt gebruik van een aantal packages
# Deze moeten bij de eerste keer lokaal worden geinstalleerd
# Hieronder worden de benodige packages geladen
library(gt)
library(dplyr)
library(ggplot2)
library(tidyr)
library(haven)
library(labelled)
options(dplyr.summarise.inform = FALSE)
source("hulpfuncties.R")

# Links naar dingen IN het document maken (maakt dat uit als we een TOC hebben? Misschien voor PDF?)
#https://quarto.org/docs/authoring/cross-references-custom.html

#TODO Hier later SPSS data inlezen
#Nu nepdata genereren 

#SPSS data inlezen
file_path = "nep testdata GMJV - Regionaal trendbestand 2022-2024.sav"


monitor_df = haven::read_spss(file_path,user_na =T) %>%
  labelled::user_na_to_na()


# #Vreselijke varcodes hernoemen naar iets anders vreselijs
# names(monitor_df) <- c("jaar","Stratum","standaardisatiefactor","leeftijd_3cat","leeftijd_2cat","gender_3cat","gender_2cat","ggd_regio","ggd_regio_utrecht_samen","gemeentecode","stedelijkheid","migratie_3cat","opleiding","opleiding_4cat","opleiding_3cat","opleiding_2cat","ervaren_gezondheid_goed","psychische_klachten", "tevreden_zelf_3cat","tevreden_lichaam_3cat","tevreden_leven_3cat","vaak_stress","vertrouwen_toekomst_3cat","bezorgd_werkgelegenheid","bezorgd_woningmarkt","bezorgd_klimaat","bezorgd_discriminatie","bezorgd_polarisatie","bezorgd_oorlogen","eenzaamheid_3cat","is_eenzaam","sterk_eenzaam","prestatiedruk")

#Er is bij deze dataset niet goed aangegeven wat missing is in SPSS.
#Tijdelijke functie om 9 Onbekend te verwijderen & naar NA om te zetten

for(var in names(monitor_df)){
  
  monitor_df <- monitor_df %>% verwijder_9_onbekend(var)

}




Uitleg grafiekfuncties en argumenten

In dit document worden de verschillende grafiekfuncties uitgelegd en hoe hier aanpassingen in gedaan kunnen worden.

In dit document wordt gebruikt gemaakt van de 'pipe-operator' %>%.

De pipe-operator stuurt een resultaat door naar de volgende functie. Op deze manier kunnen meerdere bewerkingen in R overzichtelijk aan elkaar gekoppeld worden. Lees in dat geval hier een uitgebreidere uitleg van de magrittr pipe (en de voordelen).

Zonder de pipe-operator zou het aanroepen van maak_responstabel er zo uit zien:

maak_responstabel(df = monitor_df, crossings = "gender_2cat", ...)

Met pipe-operator

monitor_df %>% maak_responstabel(crossings = "gender_2cat", ...)

Alle functies in dit document hebben als eerste argument 'df', waar een dataframe wordt verwacht. Dit argument zal niet expliciet genoemd worden in de uitleg, omdat het altijd nodig is en .

Responstabel

#TODO default waarden naar boven verplaatsten

De functie maak_responstabel() maakt een responstabel met het totaal aantal respondenten & deze respondenten uitgesplitst naar kruisvariabelen. Missing waarden op die kruisvariabelen worden standaard weergeven als 'Onbekend'

Nodige argumenten: 

crossings: Een character vector met kruisvariabelen waarover je N ingevulde vragenlijsten over wilt opsplitsen. Kan 1 of meer zijn.

Optionele argumenten:

missing_label: Een character variabele met een alternatief label voor missing waarden (standaard 'Onbekend'). 

kleuren: Een named character vector met alternatieve kleuren voor de tabel

{r}
#Standaard responstabel met twee crossings:
monitor_df %>% maak_responstabel(crossings = c("AGGSA402","AGLFA401"))

#Responstabel met drie crossings, aangepast missing_label en aangepaste kleuren.
monitor_df %>% maak_responstabel(
  crossings = c("AGGSA402","AGLFA401","AGOWS404"),
  missing_label = "Niet ingevuld",
  kleuren = c(header =  "#FEC805",
              kleur_1 = "#1A2C54",
              kleur_2 = "#009BD9",
              kleur_tekst = "#FFFFFF"
              )
  )



Staafdiagram: Dubbele uitsplitsing

De functie maak_staafdiagram_dubbele_uitsplitsing() maakt een staafdiagram voor een dichotome variabelen waarbij er twee kruisvariabelen ingevoerd kunnen worden. De eerste kruisvariabele splitst de data op de X-as en de tweede kruisvariabele op kleur.

Nodige argumenten:

var_inhoud: Een character met de naam van een dichotome variabele

var_crossing_groep

var_crossing_kleur

Optionele argumenten:

titel

kleuren

alt_text

nvar

ncel

{r}
#Standaard diagram met dubbele uitsplitsing
monitor_df %>% 
  maak_staafdiagram_dubbele_uitsplitsing(
    var_inhoud = "LVEES404",
    var_crossing_groep = "AGGSA402",
    var_crossing_kleur = "AGLFA401"
  )

