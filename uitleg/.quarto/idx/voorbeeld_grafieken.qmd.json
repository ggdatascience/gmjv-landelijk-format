{"title":"Overzicht functies","markdown":{"yaml":{"title":"","author":"","format":{"html":{"page-layout":"full","css":"../custom.css","toc":true,"toc-location":"left","embed-resources":true},"pdf":{"classoption":"landscape","toc":true,"tol":true}},"params":{"gemeentecode":1},"editor":"visual","format-links":false,"crossref":{"fig-title":"Grafiek","fig-prefix":"Grafiek"}},"headingText":"Overzicht functies","containsRefs":false,"markdown":"\n\n\n```{r, echo=F, message=F, warning=F}\n# Het script maakt gebruik van een aantal packages\n# Deze moeten bij de eerste keer lokaal worden geinstalleerd\n# Hieronder worden de benodige packages geladen\nlibrary(gt)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(haven)\nlibrary(stringr) # Voor str_replace\nlibrary(labelled) # Package om te werken met datalabels, o.a. voor to_character()\nlibrary(survey) # Package om te werken met gewogen gemiddelds incl. betrouwbaarheidsintervallen\nlibrary(glue) #om strings aangenaam aan elkaar te plakken\n\noptions(dplyr.summarise.inform = FALSE)\nsource(\"../hulpfuncties.R\")\n\n#Standaardwaarden in te stellen door gebruiker:\n# Standaard kleuren\ndefault_kleuren_grafiek <- c(\"#012C17\",\"#76B82A\",\"#007E48\")\ndefault_kleuren_responstabel <- c(\"header\" = \"#012C17\",\n                                  \"kleur_1\" = \"#007E48\",\n                                  \"kleur_2\" = \"#76B82A\",\n                                  \"kleur_tekst\" = \"#FFFFFF\"\n                                  )\n\n# Standaard minima voor groep & cel\ndefault_Nvar = 100 # Minimum aantal invullers per vraag.\ndefault_Ncel = 10 # Minimum aantal invullers oper antwoordoptie.\n\n# Standaard regio\n# Pas onderstaande naam en code aan naar de naam en code van je eigen regio.\nregionaam <- 'GGD Limburg-Noord'\nregiocode <- 23\n\n#SPSS data inlezen\n# Regionaal bestand\nfile_path_regio = \"../nep testdata GMJV - Regionaal trendbestand 2022-2024.sav\"\n\n#CBS populatiedata inlezen\n#maak_grafiek_cbs_bevolking\ncbs_populatiedata <- \"../JongVolwassenenNaarGeslachtEnLeeftijd1Jan2024.xlsx\" \n\n# Landelijk bestand\n#file_path_land = \"Totaalbestand_CGMJV2022_2024_GGD_versie 1 (N = xxx).sav\"\n\n#Lees SPSS bestand & converteer 'user-missing' naar missing in R (NA)\nmonitor_df = haven::read_spss(file_path_regio, user_na =T) %>%\n  labelled::user_na_to_na()\n\n#TODO verwijderen bij echte data. tijdelijk varlabel voor jaarvariabele\nvar_label(monitor_df$AGOJB401) <- \"Jaar\"\n#monitor_df_land = haven::read_spss(file_path_land,user_na =T) %>%\n#  labelled::user_na_to_na()\n\n#Maak survey designs\n# Regionaal 2022 en 2024\ndesign_regio <- survey_design_maken(\n                          strata = 'Stratum', \n                          gewichten = 'Standaardisatiefactor', \n                          data = monitor_df)\n\n# Landelijk 2022 en 2024\n#design_land <- survey_design_maken(\n#                          strata = 'Stratum', \n#                          gewichten = 'Standaardisatiefactor', \n#                          data = monitor_df_land)\n\n#Er is niet goed aangegeven wat missing is in SPSS.\n#tijdelijke functie om 9 Onbekend te verwijderen & naar NA te zetten\n\nfor(var in names(monitor_df)){\n  \n  monitor_df <- monitor_df %>% verwijder_9_onbekend(var)\n\n}\n\n#TODO Tijdelijke filter op alleen gemeente in parameter\nmonitor_df_regio <- monitor_df\nmonitor_df <- monitor_df %>%\n  filter(Gemeentecode == params$gemeentecode)\n\n#Maak survey design gemeente\n# Gemeente 2022 en 2024\ndesign_gem <- survey_design_maken(\n                          strata = 'Stratum', \n                          gewichten = 'Standaardisatiefactor', \n                          data = monitor_df)\n```\n\n# Uitleg grafiekfuncties en argumenten\n\nIn dit document worden de verschillende grafiekfuncties uitgelegd en hoe hier aanpassingen in gedaan kunnen worden.\\\n\\\n\n::: callout-tip\nIn dit document wordt gebruikt gemaakt van de 'pipe-operator' *%\\>%*.\n\nDe pipe-operator stuurt een resultaat door naar de volgende functie. Op deze manier kunnen meerdere bewerkingen in R overzichtelijk aan elkaar gekoppeld worden. Lees [hier](#0) een uitleg van de magrittr pipe (en de voordelen).\n\nZonder de pipe-operator zou het aanroepen van maak_responstabel er zo uit zien:\n\n``` r\nmaak_responstabel(df = monitor_df, crossings = \"gender_2cat\", ...)\n```\n\nMet pipe-operator\n\n``` r\nmonitor_df %>% maak_responstabel(crossings = \"gender_2cat\", ...)\n```\n\nAlle functies in dit document hebben als eerste argument 'df', waar een dataframe wordt verwacht. Dit argument zal niet expliciet genoemd worden in de uitleg, omdat het altijd nodig is.\n:::\n\n# Responstabel\n\nDe functie **maak_responstabel()** maakt een responstabel met het totaal aantal respondenten & deze respondenten uitgesplitst naar kruisvariabelen. Missing waarden op die kruisvariabelen worden standaard weergeven als 'Onbekend'\n\n## Nodige argumenten:\n\n-   **crossings:**\\\n    Een character vector met kruisvariabelen waarover je N ingevulde vragenlijsten over wilt opsplitsen. Kan 1 of meer zijn.\n\n## Optionele argumenten:\n\n-   **missing_label:**\\\n    Een character variabele met een alternatief label voor missing waarden (standaard 'Onbekend').\n\n-   **kleuren:\\\n    **Een named character vector met alternatieve kleuren voor de tabel\n\n### Standaard responstabel met twee crossings\n\n```{r}\n#Standaard responstabel met twee crossings:\nmonitor_df %>% maak_responstabel(\n  crossings = c(\"AGGSA402\",\"AGLFA401\"))\n```\n\n### Aangepaste responstabel met drie crossings\n\n```{r}\n#Responstabel met drie crossings, aangepast missing_label en aangepaste kleuren.\nmonitor_df %>% maak_responstabel( \n  crossings = c(\"AGGSA402\",\"AGLFA401\",\"AGOWS404\"),\n  missing_label = \"Niet ingevuld\",\n  kleuren = c(header =  \"#FEC805\",\n              kleur_1 = \"#1A2C54\",\n              kleur_2 = \"#009BD9\",\n              kleur_tekst = \"#FFFFFF\"\n              )\n  )\n```\n\n# Grafieken\n\nHieronder volgt uitleg voor de grafiekfuncties. De functies genereren automatisch alt-text, maar deze kan ook handmatig ingevoerd worden.\n\n::: callout-caution\nAls je in Quarto zelf nieuwe blokjes code maakt met grafieken is het belangrijk dat alt-text goed wordt meegenomen bij het renderen van het document. Hier zijn 2 dingen voor nodig:\n\n-   De grafiek moet opgeslagen worden in een object (hieronder 'plot')\n\n-   De alt-text moet opgehaald worden uit het object d.m.v. get_alt_text() en ingevuld worden het argument fig.alt in de 'chunk-options' van het codeblock.\n\nDit is bij de standaardrapportage uiteraard al geregeld en ziet er dan zo uit:\n\n```{r, echo = T, eval = F}\n\n{r, fig.alt = ggplot2::get_alt_text(plot)}\nplot = maak_staafdiagram(...)\n\nplot\n```\n:::\n\n## Staafdiagram: Dubbele uitsplitsing\n\nDe functie **maak_staafdiagram_dubbele_uitsplitsing()** maakt een staafdiagram voor een **dichotome variabele** waarbij de percentages 'ja' (1) worden weergeven. Er kunnen twee kruisvariabelen ingevoerd worden. De eerste kruisvariabele splitst de data op de X-as en de tweede kruisvariabele op kleur.\n\n### Nodige argumenten:\n\n-   **var_inhoud:** Een character met de naam van een dichotome variabele\n\n-   **var_crossing_groep:** Een character met de naam van een kruisvariabele\n\n-   **var_crossing_kleur:** Een character met de naam van een kruisvariabele\n\n### Optionele argumenten: {#optionele-argumenten-1}\n\n-   **titel:** Een character met een titel voor het plot\n\n-   **kleuren:** Een character vector met alternatieve kleuren voor de grafiek\n\n-   **alt_text:** Een character met de 'alt-text' voor de grafiek. Als deze waarde leeg is, wordt er automatisch gegenereerde alt-text meegegeven die alle waarden in de grafiek bevat\n\n-   **nvar:** Een numeric met het minimum aantal observaties per vraag. Als deze waarde leeg is, wordt de standaardwaarde voor nvar aangehouden.\n\n-   **ncel:** Een numeric met het minimum aantal observaties per antwoord. Als deze waarde leeg is, wordt de standaardwaarde voor ncel aangehouden.\n\n### Standaard staafdiagram met dubbele uitsplitsing\n\n```{r, fig.alt= ggplot2::get_alt_text(plot)}\n\n#Standaard staafdiagram met dubbele uitsplitsing\nplot = monitor_df %>% \n  maak_staafdiagram_dubbele_uitsplitsing(\n    var_inhoud = \"LVEES404\",\n    var_crossing_groep = \"AGGSA402\",\n    var_crossing_kleur = \"AGLFA401\"\n  )\n\nplot\n\n```\n\n### Aangepast staafdiagram met dubbele uitsplitsing\n\n```{r, fig.alt= ggplot2::get_alt_text(plot)}\n#Staafdiagram met dubbele uitsplitsing, eigen titel, kleuren, alt-text, nvar en ncel\nplot = monitor_df %>% \n  maak_staafdiagram_dubbele_uitsplitsing(\n    var_inhoud = \"LVEES404\",\n    var_crossing_groep = \"AGGSA402\",\n    var_crossing_kleur = \"AGLFA401\",\n    titel = \"Titel staafdiagram\",\n    kleuren = c(\"#FEC805\",\"#1A2C54\",\"#009BD9\"),\n    alt_text = \"Tekst die de grafiek toelicht t.b.v. digitoegankelijkheid\",\n    nvar = 100,\n    ncel = 75\n  )\n\nplot\n```\n\n## Staafdiagram vergelijking\n\nDe functie **maak_staafdiagram_vergelijking()** maakt een staafdiagram voor een **dichotome variabele** waarbij er meerdere kruisvariabelen ingevoerd kunnen worden. De percentages 'ja' (1) worden voor iedere individuele kruisvariabele naast elkaar weergeven.\n\n### Nodige argumenten:\n\n-   **var_inhoud:** Een character met de naam van een dichotome variabele\n\n-   **var_crossings:** Een character vector met de naam van één of meer kruisvariabelen\n\n### Optionele argumenten:\n\nDezelfde optionele argumenten als in [**maak_staafdiagram_dubbele_uitsplitsing():**](#optionele-argumenten-1):\n\n### Standaard staafdiagram met vergelijking\n\n```{r, fig.alt = ggplot2::get_alt_text(plot)}\n#Standaard staafdiagram met vergelijking\nplot = monitor_df %>% \n  maak_staafdiagram_vergelijking(\n    var_inhoud = \"LVEES404\",\n    var_crossings = c(\"AGGSA402\",\"AGLFA401\")\n    )\n\nplot\n\n```\n\n## Staafdiagram met meerdere staven\n\nDe functie **maak_staafdiagram_meerdere_staven()** maakt een staafdiagram voor ieder soort variabele waarbij de percentages per antwoord worden weergeven. Optioneel kan een kruisvariabele ingevoerd worden, de grafiek zal de percentages dan opsplitsen op kleur. De grafiek kan ook horizontaal weergeven worden.\n\n### Nodige argumenten:\n\n-   **var_inhoud:** Een character met de naam van een dichotome variabele\n\n### Optionele argumenten:\n\nNaast dezelfde optionele argumenten als in [**maak_staafdiagram_dubbele_uitsplitsing():**](#optionele-argumenten-1):\n\n-   **var_crossing:** Een character met de naam van één kruisvariabele\n-   **flip:** TRUE of FALSE. Als TRUE wordt de grafiek horizontaal weergeven\n\n### Standaard staafdiagram met meerdere staven\n\n```{r, fig.alt = ggplot2::get_alt_text(plot)}\n#Standaard staafdiagram met meerdere staven\nplot = monitor_df %>% \n  maak_staafdiagram_meerdere_staven(\n    var_inhoud = \"LVVTA404\"\n    )\n\nplot\n```\n\n### Aangepast staafdiagram met meerdere staven\n\n```{r, fig.alt = ggplot2::get_alt_text(plot)}\n#Staafdiagram met meerdere staven, kruisvariabele en flip = TRUE\nplot = monitor_df %>% \n  maak_staafdiagram_meerdere_staven(\n    var_inhoud = \"LVVTA404\",\n    var_crossing = \"AGGSA402\",\n    flip = TRUE\n    \n  )\n\nplot\n```\n\n## Staafdiagram uitsplitsing naast elkaar\n\nDe functie **maak_staafdiagram_uitsplitsing_naast_elkaar()** maakt een staafdiagram voor **dichotome variabelen** waarbij de percentages 'ja' (1) voor meerdere kruisvariabelen per uitsplitsing worden weergeven. Optioneel worden de onderscheiden op kleur. De grafiek kan ook horizontaal weergeven worden.\n\n### Nodige argumenten:\n\n-   **var_inhoud:** Een character met de naam van een dichotome variabele\n-   **var_crossings:** Een character vector met de naam van één of meer kruisvariabelen\n\n### Optionele argumenten:\n\nNaast dezelfde optionele argumenten als in [**maak_staafdiagram_dubbele_uitsplitsing():**](#optionele-argumenten-1):\n\n-   **kleuren_per_crossing:** TRUE of FALSE. Als TRUE krijgt iedere kruisvariabele een eigen kleur.\n\n-   **fade_kleuren:** TRUE of FALSE. Als TRUE is er overloop in de kleuren per uitsplitsing\n\n-   **flip:** TRUE of FALSE. Als TRUE wordt de grafiek horizontaal weergeven\n\n### Standaard staafdiagram met uitsplitsingen naast elkaar\n\n```{r, fig.alt = ggplot2::get_alt_text(plot)}\n#Standaard staafdiagram met uitsplitsingen naast elkaar\nplot = monitor_df %>% \n  maak_staafdiagram_uitsplitsing_naast_elkaar(\n    var_inhoud = \"LVEES404\",\n    var_crossings = c(\"AGGSA402\",\"AGLFA401\",\"AGOWS404\")\n  )\n\nplot\n```\n\n### Aangepast staafdiagram met uitsplitsingen naast elkaar\n\n```{r, fig.alt = ggplot2::get_alt_text(plot)}\n#Staafdiagram met uitsplitsingen naast elkaar, met overlopende kleuren & horizontaal\nplot = monitor_df %>% \n  maak_staafdiagram_uitsplitsing_naast_elkaar(\n    var_inhoud = \"LVEES404\",\n    var_crossings = c(\"AGGSA402\",\"AGLFA401\",\"AGOWS404\"),\n    kleuren_per_crossing = TRUE,\n    fade_kleuren = TRUE,\n    flip = TRUE\n  )\n\nplot\n```\n\n## Staafdiagram gestapeld\n\nDe functie **maak_staafdiagram_gestapeld()** maakt een horizontaal gestapeld staafdiagram voor ieder soort variabele.\n\n::: callout-tip\nfiguren die met R worden gemaakt schalen automatisch naar de ruimte die ze hebben. Dit betekend dat het gestapeld staafdiagram standaard 'hoger' is dan gewenst.\n\nDe dimensies van een figuur in Quarto kunnen aangepast worden in de chunk-options met de argumenten 'fig.width' en 'fig.height' zoals hier:\n\n```{r, echo = T, eval = F}\n\n{r, fig.alt = ggplot2::get_alt_text(plot), fig.width = 12, fig.height = 3}\nplot = maak_staafdiagram(…)\n\nplot\n```\n\n\\\n:::\n\n### Nodige argumenten\n\n-   **var_inhoud:** Een character met de naam van een variabele\n\n### Optionele argumenten\n\nNaast dezelfde optionele argumenten als in [**maak_staafdiagram_dubbele_uitsplitsing():**](#optionele-argumenten-1) - **var_crossing:** Een character met de naam van één kruisvariabele\n\n### Standaard gestapeld staafdiagram\n\n```{r, fig.alt = ggplot2::get_alt_text(plot), fig.width = 12, fig.height = 3}\n#Standaard gestapeld staafdiagram\nplot = monitor_df %>% \n  maak_staafdiagram_gestapeld(\n    var_inhoud = \"LVVTA404\"\n  )\n\nplot\n```\n\n### Aangepast gestapeld staafdiagram\n\n```{r, fig.alt = ggplot2::get_alt_text(plot), fig.width = 12, fig.height = 3}\n#Standaard gestapeld staafdiagram\nplot = monitor_df %>% \n  maak_staafdiagram_gestapeld(\n    var_inhoud = \"LVVTA404\",\n    var_crossing = \"AGGSA402\"\n    \n  )\n\nplot\n```\n\n## Cirkeldiagram\n\nLET OP: ITT tot andere grafiekfuncties moet je géén get_alt_text() gebruiken in de chunk-options. Cirkeldiagrammen worden met plotly gemaakt en de alt-text wordt in door de functie maak_cirkeldiagram() al correct toegevoegd.\n\n### Nodige argumenten\n\n-   **var_inhoud:** Een character met de naam van een variabele\n\n### Optionele argumenten\n\n-   Dezelfde argumenten als in [**maak_staafdiagram_dubbele_uitsplitsing():**](#optionele-argumenten-1)\n\n-   **titel**: character variabele. Als argument leeg is wordt het variabellabel van var_inhoud gebruikt.\n\n```{r}\n\n#LET OP: ITT tot andere grafiekfuncties moet je géén get_alt_text() gebruiken in de chunk-options. Cirkeldiagrammen worden met plotly gemaakt en de alt-text wordt in door de functie maak_cirkeldiagram() al correct toegevoegd.\n\n#Standaard cirkeldiagram staafdiagram\nplot = monitor_df %>% \n  maak_cirkeldiagram(\n    var_inhoud = \"LVVTA404\"\n  )\n\nplot\n```\n\n## Populatiegrafiek CBS\n\nFunctie om een horizontaal georienteerd gestapeld staafdiagram te maken waarin populatiegegevens van het CBS worden vergeleken met de response op de per regio en gemeente. Dit kan o.b.v. de kruisvariabelen leeftijd en geslacht gedaan worden.\n\n::: calout-warning\nHieronder wordt monitor_df_regio gebruikt ITT bovenstaande waar monitor_df wordt gebruikt.\n\nTODO; landelijke demografische cijfers toevoegen aan functie TODO; uitzoeken wel dataframes er allemaal gebruikt zullen worden.\n:::\n\n### Optionele argumenten\n\n-   **gem_code:** character variabele met gemeentenaam. Standaard de 'huidige' gemeente o.b.v. params\\$gemeentecode.\n-   **crossing_cbs:** character variabele. De naam van de kruising die getoond moet worden. Opties: \"leeftijd\" of \"geslacht\".\n-   **niveaus:** character vector met niveaus die getoond moeten worden. Standaard c(\"nl\",\"regio\",\"gemeente\")\n-   **missing_bewaren:** TRUE of FALSE. Als TRUE worden percentages met missing categorieën voor *Deelnemers* bewaard en getoond in de grafiek.\n-   **missing_label:** character variabele. Het label dat gegeven moet worden aan een eventuele missing categorie. Standaard \"Onbekend\".\n-   **kleuren:** Een character vector met alternatieve kleuren voor de grafiek\n\n### Standaard Populatiegrafiek CBS\n\n```{r, fig.alt = ggplot2::get_alt_text(plot)}\nplot <- monitor_df_regio %>% \n  maak_grafiek_cbs_bevolking()\n\n\nplot\n```\n\n### Aangepaste Populatiegrafiek CBS\n\n```{r}\nplot <- monitor_df_regio %>% \n  maak_grafiek_cbs_bevolking(\n    niveaus = c(\"regio\",\"gemeente\"),\n    crossing_cbs = \"geslacht\",\n    missing_bewaren = TRUE,\n    missing_label = \"niet ingevuld\",\n\n  )\n\nplot\n\n```\n","srcMarkdownNoYaml":"\n\n# Overzicht functies \n\n```{r, echo=F, message=F, warning=F}\n# Het script maakt gebruik van een aantal packages\n# Deze moeten bij de eerste keer lokaal worden geinstalleerd\n# Hieronder worden de benodige packages geladen\nlibrary(gt)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(haven)\nlibrary(stringr) # Voor str_replace\nlibrary(labelled) # Package om te werken met datalabels, o.a. voor to_character()\nlibrary(survey) # Package om te werken met gewogen gemiddelds incl. betrouwbaarheidsintervallen\nlibrary(glue) #om strings aangenaam aan elkaar te plakken\n\noptions(dplyr.summarise.inform = FALSE)\nsource(\"../hulpfuncties.R\")\n\n#Standaardwaarden in te stellen door gebruiker:\n# Standaard kleuren\ndefault_kleuren_grafiek <- c(\"#012C17\",\"#76B82A\",\"#007E48\")\ndefault_kleuren_responstabel <- c(\"header\" = \"#012C17\",\n                                  \"kleur_1\" = \"#007E48\",\n                                  \"kleur_2\" = \"#76B82A\",\n                                  \"kleur_tekst\" = \"#FFFFFF\"\n                                  )\n\n# Standaard minima voor groep & cel\ndefault_Nvar = 100 # Minimum aantal invullers per vraag.\ndefault_Ncel = 10 # Minimum aantal invullers oper antwoordoptie.\n\n# Standaard regio\n# Pas onderstaande naam en code aan naar de naam en code van je eigen regio.\nregionaam <- 'GGD Limburg-Noord'\nregiocode <- 23\n\n#SPSS data inlezen\n# Regionaal bestand\nfile_path_regio = \"../nep testdata GMJV - Regionaal trendbestand 2022-2024.sav\"\n\n#CBS populatiedata inlezen\n#maak_grafiek_cbs_bevolking\ncbs_populatiedata <- \"../JongVolwassenenNaarGeslachtEnLeeftijd1Jan2024.xlsx\" \n\n# Landelijk bestand\n#file_path_land = \"Totaalbestand_CGMJV2022_2024_GGD_versie 1 (N = xxx).sav\"\n\n#Lees SPSS bestand & converteer 'user-missing' naar missing in R (NA)\nmonitor_df = haven::read_spss(file_path_regio, user_na =T) %>%\n  labelled::user_na_to_na()\n\n#TODO verwijderen bij echte data. tijdelijk varlabel voor jaarvariabele\nvar_label(monitor_df$AGOJB401) <- \"Jaar\"\n#monitor_df_land = haven::read_spss(file_path_land,user_na =T) %>%\n#  labelled::user_na_to_na()\n\n#Maak survey designs\n# Regionaal 2022 en 2024\ndesign_regio <- survey_design_maken(\n                          strata = 'Stratum', \n                          gewichten = 'Standaardisatiefactor', \n                          data = monitor_df)\n\n# Landelijk 2022 en 2024\n#design_land <- survey_design_maken(\n#                          strata = 'Stratum', \n#                          gewichten = 'Standaardisatiefactor', \n#                          data = monitor_df_land)\n\n#Er is niet goed aangegeven wat missing is in SPSS.\n#tijdelijke functie om 9 Onbekend te verwijderen & naar NA te zetten\n\nfor(var in names(monitor_df)){\n  \n  monitor_df <- monitor_df %>% verwijder_9_onbekend(var)\n\n}\n\n#TODO Tijdelijke filter op alleen gemeente in parameter\nmonitor_df_regio <- monitor_df\nmonitor_df <- monitor_df %>%\n  filter(Gemeentecode == params$gemeentecode)\n\n#Maak survey design gemeente\n# Gemeente 2022 en 2024\ndesign_gem <- survey_design_maken(\n                          strata = 'Stratum', \n                          gewichten = 'Standaardisatiefactor', \n                          data = monitor_df)\n```\n\n# Uitleg grafiekfuncties en argumenten\n\nIn dit document worden de verschillende grafiekfuncties uitgelegd en hoe hier aanpassingen in gedaan kunnen worden.\\\n\\\n\n::: callout-tip\nIn dit document wordt gebruikt gemaakt van de 'pipe-operator' *%\\>%*.\n\nDe pipe-operator stuurt een resultaat door naar de volgende functie. Op deze manier kunnen meerdere bewerkingen in R overzichtelijk aan elkaar gekoppeld worden. Lees [hier](#0) een uitleg van de magrittr pipe (en de voordelen).\n\nZonder de pipe-operator zou het aanroepen van maak_responstabel er zo uit zien:\n\n``` r\nmaak_responstabel(df = monitor_df, crossings = \"gender_2cat\", ...)\n```\n\nMet pipe-operator\n\n``` r\nmonitor_df %>% maak_responstabel(crossings = \"gender_2cat\", ...)\n```\n\nAlle functies in dit document hebben als eerste argument 'df', waar een dataframe wordt verwacht. Dit argument zal niet expliciet genoemd worden in de uitleg, omdat het altijd nodig is.\n:::\n\n# Responstabel\n\nDe functie **maak_responstabel()** maakt een responstabel met het totaal aantal respondenten & deze respondenten uitgesplitst naar kruisvariabelen. Missing waarden op die kruisvariabelen worden standaard weergeven als 'Onbekend'\n\n## Nodige argumenten:\n\n-   **crossings:**\\\n    Een character vector met kruisvariabelen waarover je N ingevulde vragenlijsten over wilt opsplitsen. Kan 1 of meer zijn.\n\n## Optionele argumenten:\n\n-   **missing_label:**\\\n    Een character variabele met een alternatief label voor missing waarden (standaard 'Onbekend').\n\n-   **kleuren:\\\n    **Een named character vector met alternatieve kleuren voor de tabel\n\n### Standaard responstabel met twee crossings\n\n```{r}\n#Standaard responstabel met twee crossings:\nmonitor_df %>% maak_responstabel(\n  crossings = c(\"AGGSA402\",\"AGLFA401\"))\n```\n\n### Aangepaste responstabel met drie crossings\n\n```{r}\n#Responstabel met drie crossings, aangepast missing_label en aangepaste kleuren.\nmonitor_df %>% maak_responstabel( \n  crossings = c(\"AGGSA402\",\"AGLFA401\",\"AGOWS404\"),\n  missing_label = \"Niet ingevuld\",\n  kleuren = c(header =  \"#FEC805\",\n              kleur_1 = \"#1A2C54\",\n              kleur_2 = \"#009BD9\",\n              kleur_tekst = \"#FFFFFF\"\n              )\n  )\n```\n\n# Grafieken\n\nHieronder volgt uitleg voor de grafiekfuncties. De functies genereren automatisch alt-text, maar deze kan ook handmatig ingevoerd worden.\n\n::: callout-caution\nAls je in Quarto zelf nieuwe blokjes code maakt met grafieken is het belangrijk dat alt-text goed wordt meegenomen bij het renderen van het document. Hier zijn 2 dingen voor nodig:\n\n-   De grafiek moet opgeslagen worden in een object (hieronder 'plot')\n\n-   De alt-text moet opgehaald worden uit het object d.m.v. get_alt_text() en ingevuld worden het argument fig.alt in de 'chunk-options' van het codeblock.\n\nDit is bij de standaardrapportage uiteraard al geregeld en ziet er dan zo uit:\n\n```{r, echo = T, eval = F}\n\n{r, fig.alt = ggplot2::get_alt_text(plot)}\nplot = maak_staafdiagram(...)\n\nplot\n```\n:::\n\n## Staafdiagram: Dubbele uitsplitsing\n\nDe functie **maak_staafdiagram_dubbele_uitsplitsing()** maakt een staafdiagram voor een **dichotome variabele** waarbij de percentages 'ja' (1) worden weergeven. Er kunnen twee kruisvariabelen ingevoerd worden. De eerste kruisvariabele splitst de data op de X-as en de tweede kruisvariabele op kleur.\n\n### Nodige argumenten:\n\n-   **var_inhoud:** Een character met de naam van een dichotome variabele\n\n-   **var_crossing_groep:** Een character met de naam van een kruisvariabele\n\n-   **var_crossing_kleur:** Een character met de naam van een kruisvariabele\n\n### Optionele argumenten: {#optionele-argumenten-1}\n\n-   **titel:** Een character met een titel voor het plot\n\n-   **kleuren:** Een character vector met alternatieve kleuren voor de grafiek\n\n-   **alt_text:** Een character met de 'alt-text' voor de grafiek. Als deze waarde leeg is, wordt er automatisch gegenereerde alt-text meegegeven die alle waarden in de grafiek bevat\n\n-   **nvar:** Een numeric met het minimum aantal observaties per vraag. Als deze waarde leeg is, wordt de standaardwaarde voor nvar aangehouden.\n\n-   **ncel:** Een numeric met het minimum aantal observaties per antwoord. Als deze waarde leeg is, wordt de standaardwaarde voor ncel aangehouden.\n\n### Standaard staafdiagram met dubbele uitsplitsing\n\n```{r, fig.alt= ggplot2::get_alt_text(plot)}\n\n#Standaard staafdiagram met dubbele uitsplitsing\nplot = monitor_df %>% \n  maak_staafdiagram_dubbele_uitsplitsing(\n    var_inhoud = \"LVEES404\",\n    var_crossing_groep = \"AGGSA402\",\n    var_crossing_kleur = \"AGLFA401\"\n  )\n\nplot\n\n```\n\n### Aangepast staafdiagram met dubbele uitsplitsing\n\n```{r, fig.alt= ggplot2::get_alt_text(plot)}\n#Staafdiagram met dubbele uitsplitsing, eigen titel, kleuren, alt-text, nvar en ncel\nplot = monitor_df %>% \n  maak_staafdiagram_dubbele_uitsplitsing(\n    var_inhoud = \"LVEES404\",\n    var_crossing_groep = \"AGGSA402\",\n    var_crossing_kleur = \"AGLFA401\",\n    titel = \"Titel staafdiagram\",\n    kleuren = c(\"#FEC805\",\"#1A2C54\",\"#009BD9\"),\n    alt_text = \"Tekst die de grafiek toelicht t.b.v. digitoegankelijkheid\",\n    nvar = 100,\n    ncel = 75\n  )\n\nplot\n```\n\n## Staafdiagram vergelijking\n\nDe functie **maak_staafdiagram_vergelijking()** maakt een staafdiagram voor een **dichotome variabele** waarbij er meerdere kruisvariabelen ingevoerd kunnen worden. De percentages 'ja' (1) worden voor iedere individuele kruisvariabele naast elkaar weergeven.\n\n### Nodige argumenten:\n\n-   **var_inhoud:** Een character met de naam van een dichotome variabele\n\n-   **var_crossings:** Een character vector met de naam van één of meer kruisvariabelen\n\n### Optionele argumenten:\n\nDezelfde optionele argumenten als in [**maak_staafdiagram_dubbele_uitsplitsing():**](#optionele-argumenten-1):\n\n### Standaard staafdiagram met vergelijking\n\n```{r, fig.alt = ggplot2::get_alt_text(plot)}\n#Standaard staafdiagram met vergelijking\nplot = monitor_df %>% \n  maak_staafdiagram_vergelijking(\n    var_inhoud = \"LVEES404\",\n    var_crossings = c(\"AGGSA402\",\"AGLFA401\")\n    )\n\nplot\n\n```\n\n## Staafdiagram met meerdere staven\n\nDe functie **maak_staafdiagram_meerdere_staven()** maakt een staafdiagram voor ieder soort variabele waarbij de percentages per antwoord worden weergeven. Optioneel kan een kruisvariabele ingevoerd worden, de grafiek zal de percentages dan opsplitsen op kleur. De grafiek kan ook horizontaal weergeven worden.\n\n### Nodige argumenten:\n\n-   **var_inhoud:** Een character met de naam van een dichotome variabele\n\n### Optionele argumenten:\n\nNaast dezelfde optionele argumenten als in [**maak_staafdiagram_dubbele_uitsplitsing():**](#optionele-argumenten-1):\n\n-   **var_crossing:** Een character met de naam van één kruisvariabele\n-   **flip:** TRUE of FALSE. Als TRUE wordt de grafiek horizontaal weergeven\n\n### Standaard staafdiagram met meerdere staven\n\n```{r, fig.alt = ggplot2::get_alt_text(plot)}\n#Standaard staafdiagram met meerdere staven\nplot = monitor_df %>% \n  maak_staafdiagram_meerdere_staven(\n    var_inhoud = \"LVVTA404\"\n    )\n\nplot\n```\n\n### Aangepast staafdiagram met meerdere staven\n\n```{r, fig.alt = ggplot2::get_alt_text(plot)}\n#Staafdiagram met meerdere staven, kruisvariabele en flip = TRUE\nplot = monitor_df %>% \n  maak_staafdiagram_meerdere_staven(\n    var_inhoud = \"LVVTA404\",\n    var_crossing = \"AGGSA402\",\n    flip = TRUE\n    \n  )\n\nplot\n```\n\n## Staafdiagram uitsplitsing naast elkaar\n\nDe functie **maak_staafdiagram_uitsplitsing_naast_elkaar()** maakt een staafdiagram voor **dichotome variabelen** waarbij de percentages 'ja' (1) voor meerdere kruisvariabelen per uitsplitsing worden weergeven. Optioneel worden de onderscheiden op kleur. De grafiek kan ook horizontaal weergeven worden.\n\n### Nodige argumenten:\n\n-   **var_inhoud:** Een character met de naam van een dichotome variabele\n-   **var_crossings:** Een character vector met de naam van één of meer kruisvariabelen\n\n### Optionele argumenten:\n\nNaast dezelfde optionele argumenten als in [**maak_staafdiagram_dubbele_uitsplitsing():**](#optionele-argumenten-1):\n\n-   **kleuren_per_crossing:** TRUE of FALSE. Als TRUE krijgt iedere kruisvariabele een eigen kleur.\n\n-   **fade_kleuren:** TRUE of FALSE. Als TRUE is er overloop in de kleuren per uitsplitsing\n\n-   **flip:** TRUE of FALSE. Als TRUE wordt de grafiek horizontaal weergeven\n\n### Standaard staafdiagram met uitsplitsingen naast elkaar\n\n```{r, fig.alt = ggplot2::get_alt_text(plot)}\n#Standaard staafdiagram met uitsplitsingen naast elkaar\nplot = monitor_df %>% \n  maak_staafdiagram_uitsplitsing_naast_elkaar(\n    var_inhoud = \"LVEES404\",\n    var_crossings = c(\"AGGSA402\",\"AGLFA401\",\"AGOWS404\")\n  )\n\nplot\n```\n\n### Aangepast staafdiagram met uitsplitsingen naast elkaar\n\n```{r, fig.alt = ggplot2::get_alt_text(plot)}\n#Staafdiagram met uitsplitsingen naast elkaar, met overlopende kleuren & horizontaal\nplot = monitor_df %>% \n  maak_staafdiagram_uitsplitsing_naast_elkaar(\n    var_inhoud = \"LVEES404\",\n    var_crossings = c(\"AGGSA402\",\"AGLFA401\",\"AGOWS404\"),\n    kleuren_per_crossing = TRUE,\n    fade_kleuren = TRUE,\n    flip = TRUE\n  )\n\nplot\n```\n\n## Staafdiagram gestapeld\n\nDe functie **maak_staafdiagram_gestapeld()** maakt een horizontaal gestapeld staafdiagram voor ieder soort variabele.\n\n::: callout-tip\nfiguren die met R worden gemaakt schalen automatisch naar de ruimte die ze hebben. Dit betekend dat het gestapeld staafdiagram standaard 'hoger' is dan gewenst.\n\nDe dimensies van een figuur in Quarto kunnen aangepast worden in de chunk-options met de argumenten 'fig.width' en 'fig.height' zoals hier:\n\n```{r, echo = T, eval = F}\n\n{r, fig.alt = ggplot2::get_alt_text(plot), fig.width = 12, fig.height = 3}\nplot = maak_staafdiagram(…)\n\nplot\n```\n\n\\\n:::\n\n### Nodige argumenten\n\n-   **var_inhoud:** Een character met de naam van een variabele\n\n### Optionele argumenten\n\nNaast dezelfde optionele argumenten als in [**maak_staafdiagram_dubbele_uitsplitsing():**](#optionele-argumenten-1) - **var_crossing:** Een character met de naam van één kruisvariabele\n\n### Standaard gestapeld staafdiagram\n\n```{r, fig.alt = ggplot2::get_alt_text(plot), fig.width = 12, fig.height = 3}\n#Standaard gestapeld staafdiagram\nplot = monitor_df %>% \n  maak_staafdiagram_gestapeld(\n    var_inhoud = \"LVVTA404\"\n  )\n\nplot\n```\n\n### Aangepast gestapeld staafdiagram\n\n```{r, fig.alt = ggplot2::get_alt_text(plot), fig.width = 12, fig.height = 3}\n#Standaard gestapeld staafdiagram\nplot = monitor_df %>% \n  maak_staafdiagram_gestapeld(\n    var_inhoud = \"LVVTA404\",\n    var_crossing = \"AGGSA402\"\n    \n  )\n\nplot\n```\n\n## Cirkeldiagram\n\nLET OP: ITT tot andere grafiekfuncties moet je géén get_alt_text() gebruiken in de chunk-options. Cirkeldiagrammen worden met plotly gemaakt en de alt-text wordt in door de functie maak_cirkeldiagram() al correct toegevoegd.\n\n### Nodige argumenten\n\n-   **var_inhoud:** Een character met de naam van een variabele\n\n### Optionele argumenten\n\n-   Dezelfde argumenten als in [**maak_staafdiagram_dubbele_uitsplitsing():**](#optionele-argumenten-1)\n\n-   **titel**: character variabele. Als argument leeg is wordt het variabellabel van var_inhoud gebruikt.\n\n```{r}\n\n#LET OP: ITT tot andere grafiekfuncties moet je géén get_alt_text() gebruiken in de chunk-options. Cirkeldiagrammen worden met plotly gemaakt en de alt-text wordt in door de functie maak_cirkeldiagram() al correct toegevoegd.\n\n#Standaard cirkeldiagram staafdiagram\nplot = monitor_df %>% \n  maak_cirkeldiagram(\n    var_inhoud = \"LVVTA404\"\n  )\n\nplot\n```\n\n## Populatiegrafiek CBS\n\nFunctie om een horizontaal georienteerd gestapeld staafdiagram te maken waarin populatiegegevens van het CBS worden vergeleken met de response op de per regio en gemeente. Dit kan o.b.v. de kruisvariabelen leeftijd en geslacht gedaan worden.\n\n::: calout-warning\nHieronder wordt monitor_df_regio gebruikt ITT bovenstaande waar monitor_df wordt gebruikt.\n\nTODO; landelijke demografische cijfers toevoegen aan functie TODO; uitzoeken wel dataframes er allemaal gebruikt zullen worden.\n:::\n\n### Optionele argumenten\n\n-   **gem_code:** character variabele met gemeentenaam. Standaard de 'huidige' gemeente o.b.v. params\\$gemeentecode.\n-   **crossing_cbs:** character variabele. De naam van de kruising die getoond moet worden. Opties: \"leeftijd\" of \"geslacht\".\n-   **niveaus:** character vector met niveaus die getoond moeten worden. Standaard c(\"nl\",\"regio\",\"gemeente\")\n-   **missing_bewaren:** TRUE of FALSE. Als TRUE worden percentages met missing categorieën voor *Deelnemers* bewaard en getoond in de grafiek.\n-   **missing_label:** character variabele. Het label dat gegeven moet worden aan een eventuele missing categorie. Standaard \"Onbekend\".\n-   **kleuren:** Een character vector met alternatieve kleuren voor de grafiek\n\n### Standaard Populatiegrafiek CBS\n\n```{r, fig.alt = ggplot2::get_alt_text(plot)}\nplot <- monitor_df_regio %>% \n  maak_grafiek_cbs_bevolking()\n\n\nplot\n```\n\n### Aangepaste Populatiegrafiek CBS\n\n```{r}\nplot <- monitor_df_regio %>% \n  maak_grafiek_cbs_bevolking(\n    niveaus = c(\"regio\",\"gemeente\"),\n    crossing_cbs = \"geslacht\",\n    missing_bewaren = TRUE,\n    missing_label = \"niet ingevuld\",\n\n  )\n\nplot\n\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":false},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../custom.css"],"toc":true,"embed-resources":true,"output-file":"voorbeeld_grafieken.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.555","bibliography":["references.bib"],"theme":"cosmo","title":"","author":"","params":{"gemeentecode":1},"editor":"visual","crossref":{"fig-title":"Grafiek","fig-prefix":"Grafiek"},"page-layout":"full","toc-location":"left"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}